<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="9" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-20T20:32:41 IST" name="Suite" finished-at="2023-06-20T20:37:58 IST" duration-ms="317491">
    <groups>
    </groups>
    <test started-at="2023-06-20T20:32:41 IST" name="chromeTest" finished-at="2023-06-20T20:37:58 IST" duration-ms="317491">
      <class name="executePageClasses.ExecuteDeductionPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDeductionPageClass@6bbe85a8]" started-at="2023-06-20T20:34:24 IST" name="beforeMethod" finished-at="2023-06-20T20:34:41 IST" duration-ms="16878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToAddANewDeduction()[pri:0, instance:executePageClasses.ExecuteDeductionPageClass@6bbe85a8]" started-at="2023-06-20T20:34:41 IST" name="verifyToAddANewDeduction" finished-at="2023-06-20T20:34:54 IST" duration-ms="12834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToAddANewDeduction -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteDeductionPageClass@6bbe85a8]" started-at="2023-06-20T20:34:54 IST" name="afterMethod" finished-at="2023-06-20T20:34:54 IST" duration-ms="217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteDeductionPageClass -->
      <class name="executePageClasses.ExecuteWorkersPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:32:41 IST" name="beforeMethod" finished-at="2023-06-20T20:33:29 IST" duration-ms="48295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDeleteAWorker()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:33:29 IST" name="verifyDeleteAWorker" finished-at="2023-06-20T20:33:40 IST" duration-ms="10924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteAWorker -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:33:40 IST" name="afterMethod" finished-at="2023-06-20T20:33:41 IST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:33:41 IST" name="beforeMethod" finished-at="2023-06-20T20:33:45 IST" duration-ms="4578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToCreateANewWorker()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:33:45 IST" name="verifyToCreateANewWorker" finished-at="2023-06-20T20:34:05 IST" duration-ms="19494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToCreateANewWorker -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:34:05 IST" name="afterMethod" finished-at="2023-06-20T20:34:05 IST" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:34:05 IST" name="beforeMethod" finished-at="2023-06-20T20:34:09 IST" duration-ms="4304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToSearchAWorker()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:34:09 IST" name="verifyToSearchAWorker" finished-at="2023-06-20T20:34:24 IST" duration-ms="14679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToSearchAWorker -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@750e2b97]" started-at="2023-06-20T20:34:24 IST" name="afterMethod" finished-at="2023-06-20T20:34:24 IST" duration-ms="270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteWorkersPageClass -->
      <class name="executePageClasses.ExexcuteClientPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExexcuteClientPageClass@3a7442c7]" started-at="2023-06-20T20:34:54 IST" name="beforeMethod" finished-at="2023-06-20T20:35:19 IST" duration-ms="24804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyClientSearchInClientPage()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@3a7442c7]" started-at="2023-06-20T20:35:19 IST" name="verifyClientSearchInClientPage" finished-at="2023-06-20T20:35:25 IST" duration-ms="6052" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[C:\Users\abhir\eclipse-workspace\com.superstoreProject\src\test\resources\Excel.xlsx" (The filename, directory name, or volume label syntax is incorrect)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: C:\Users\abhir\eclipse-workspace\com.superstoreProject\src\test\resources\Excel.xlsx" (The filename, directory name, or volume label syntax is incorrect)
at java.base/java.io.FileInputStream.open0(Native Method)
at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
at utility.ExcelRead.readIntegerData(ExcelRead.java:30)
at elementRepository.ClientPageClass.readInvoiceContact(ClientPageClass.java:243)
at executePageClasses.ExexcuteClientPageClass.verifyClientSearchInClientPage(ExexcuteClientPageClass.java:87)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClientSearchInClientPage -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@3a7442c7]" started-at="2023-06-20T20:35:25 IST" name="afterMethod" finished-at="2023-06-20T20:35:25 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExexcuteClientPageClass@3a7442c7]" started-at="2023-06-20T20:35:25 IST" name="beforeMethod" finished-at="2023-06-20T20:35:44 IST" duration-ms="18221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCreateNewClient()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@3a7442c7]" started-at="2023-06-20T20:35:44 IST" name="verifyCreateNewClient" finished-at="2023-06-20T20:36:03 IST" duration-ms="19454" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//*[(text()='Abhijith')])[4]"}
  (Session info: chrome=114.0.5735.134)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1d0f1d4987fbcf6d0a430bff96c2a86a, findElement {using=xpath, value=(//*[(text()='Abhijith')])[4]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.134, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\abhir\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50123}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50123/devtoo..., se:cdpVersion: 114.0.5735.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1d0f1d4987fbcf6d0a430bff96c2a86a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//*[(text()='Abhijith')])[4]"}
  (Session info: chrome=114.0.5735.134)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1d0f1d4987fbcf6d0a430bff96c2a86a, findElement {using=xpath, value=(//*[(text()='Abhijith')])[4]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.134, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\abhir\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50123}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50123/devtoo..., se:cdpVersion: 114.0.5735.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1d0f1d4987fbcf6d0a430bff96c2a86a
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.isDisplayed(Unknown Source)
at utility.GeneralUtilities.isDisplayedOfMethod(GeneralUtilities.java:45)
at elementRepository.ClientPageClass.displayName(ClientPageClass.java:221)
at executePageClasses.ExexcuteClientPageClass.verifyCreateNewClient(ExexcuteClientPageClass.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateNewClient -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@3a7442c7]" started-at="2023-06-20T20:36:03 IST" name="afterMethod" finished-at="2023-06-20T20:36:06 IST" duration-ms="2871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExexcuteClientPageClass -->
      <class name="executePageClasses.ExecuteLoginPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@548d708a]" started-at="2023-06-20T20:37:28 IST" name="beforeMethod" finished-at="2023-06-20T20:37:41 IST" duration-ms="12533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@548d708a]" started-at="2023-06-20T20:37:41 IST" name="verifySuccessfullLogin" finished-at="2023-06-20T20:37:43 IST" duration-ms="2235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@548d708a]" started-at="2023-06-20T20:37:43 IST" name="afterMethod" finished-at="2023-06-20T20:37:43 IST" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@548d708a]" started-at="2023-06-20T20:37:43 IST" name="beforeMethod" finished-at="2023-06-20T20:37:58 IST" duration-ms="14706" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCurrentPageIsOpenWhileHittingTheUrl()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@548d708a]" started-at="2023-06-20T20:37:58 IST" name="verifyTheCurrentPageIsOpenWhileHittingTheUrl" finished-at="2023-06-20T20:37:58 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCurrentPageIsOpenWhileHittingTheUrl -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@548d708a]" started-at="2023-06-20T20:37:58 IST" name="afterMethod" finished-at="2023-06-20T20:37:58 IST" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyUnSuccessfullLogin(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@548d708a]" started-at="2023-06-20T20:37:58 IST" name="verifyUnSuccessfullLogin" finished-at="2023-06-20T20:37:58 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Found two providers called 'DataProvider1' on class executePageClasses.DataProviderLogin]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Found two providers called 'DataProvider1' on class executePageClasses.DataProviderLogin
at org.testng.internal.Parameters.findDataProvider(Parameters.java:641)
at org.testng.internal.Parameters.findDataProvider(Parameters.java:510)
at org.testng.internal.Parameters.handleParameters(Parameters.java:763)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:924)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnSuccessfullLogin -->
      </class> <!-- executePageClasses.ExecuteLoginPageClass -->
      <class name="executePageClasses.ExecuteDashBoardPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:36:06 IST" name="beforeMethod" finished-at="2023-06-20T20:36:21 IST" duration-ms="15268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDeductionIsOpenOrNoT()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:36:21 IST" name="verifyDeductionIsOpenOrNoT" finished-at="2023-06-20T20:36:26 IST" duration-ms="4752" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeductionIsOpenOrNoT -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:36:26 IST" name="afterMethod" finished-at="2023-06-20T20:36:26 IST" duration-ms="308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:36:26 IST" name="beforeMethod" finished-at="2023-06-20T20:36:41 IST" duration-ms="14624" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginMessageIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:36:41 IST" name="verifyLoginMessageIsDisplayedOrNot" finished-at="2023-06-20T20:36:44 IST" duration-ms="2917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginMessageIsDisplayedOrNot -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:36:44 IST" name="afterMethod" finished-at="2023-06-20T20:36:44 IST" duration-ms="568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:36:44 IST" name="beforeMethod" finished-at="2023-06-20T20:37:03 IST" duration-ms="18935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLogoInDashBoardIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:37:03 IST" name="verifyLogoInDashBoardIsDisplayedOrNot" finished-at="2023-06-20T20:37:07 IST" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoInDashBoardIsDisplayedOrNot -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:37:07 IST" name="afterMethod" finished-at="2023-06-20T20:37:07 IST" duration-ms="337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:37:07 IST" name="beforeMethod" finished-at="2023-06-20T20:37:17 IST" duration-ms="10093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:37:17 IST" name="verifySuccessfullLogin" finished-at="2023-06-20T20:37:28 IST" duration-ms="10537" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='dropdown-toggle']"}
  (Session info: chrome=114.0.5735.134)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7e316ea1595e9bbd9ce3f6e1e3a57083, findElement {using=xpath, value=//*[@class='dropdown-toggle']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.134, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\abhir\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50238}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50238/devtoo..., se:cdpVersion: 114.0.5735.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7e316ea1595e9bbd9ce3f6e1e3a57083]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='dropdown-toggle']"}
  (Session info: chrome=114.0.5735.134)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7e316ea1595e9bbd9ce3f6e1e3a57083, findElement {using=xpath, value=//*[@class='dropdown-toggle']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.134, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\abhir\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50238}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50238/devtoo..., se:cdpVersion: 114.0.5735.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7e316ea1595e9bbd9ce3f6e1e3a57083
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy17.isDisplayed(Unknown Source)
at utility.GeneralUtilities.isDisplayedOfMethod(GeneralUtilities.java:45)
at elementRepository.LoginPageClass.isCaolThomasDisplayed(LoginPageClass.java:61)
at executePageClasses.ExecuteDashBoardPageClass.verifySuccessfullLogin(ExecuteDashBoardPageClass.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@4be29ed9]" started-at="2023-06-20T20:37:28 IST" name="afterMethod" finished-at="2023-06-20T20:37:28 IST" duration-ms="689" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteDashBoardPageClass -->
    </test> <!-- chromeTest -->
  </suite> <!-- Suite -->
</testng-results>
