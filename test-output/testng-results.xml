<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="14" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-26T18:12:01 IST" name="Suite" finished-at="2023-07-26T18:16:58 IST" duration-ms="296537">
    <groups>
      <group name="group1">
        <method signature="ExecuteDashBoardPageClass.verifyDeductionIsOpenOrNoT()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" name="verifyDeductionIsOpenOrNoT" class="executePageClasses.ExecuteDashBoardPageClass"/>
        <method signature="ExecuteDashBoardPageClass.verifyLoginMessageIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" name="verifyLoginMessageIsDisplayedOrNot" class="executePageClasses.ExecuteDashBoardPageClass"/>
        <method signature="ExecuteDashBoardPageClass.verifyLogoInDashBoardIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" name="verifyLogoInDashBoardIsDisplayedOrNot" class="executePageClasses.ExecuteDashBoardPageClass"/>
        <method signature="ExecuteDashBoardPageClass.verifySuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" name="verifySuccessfullLogin" class="executePageClasses.ExecuteDashBoardPageClass"/>
        <method signature="ExecuteWorkersPageClass.verifyToCreateANewWorker()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" name="verifyToCreateANewWorker" class="executePageClasses.ExecuteWorkersPageClass"/>
        <method signature="ExecuteWorkersPageClass.verifyToSearchAWorker()[pri:1, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" name="verifyToSearchAWorker" class="executePageClasses.ExecuteWorkersPageClass"/>
        <method signature="ExecuteWorkersPageClass.verifyDeleteAWorker()[pri:2, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" name="verifyDeleteAWorker" class="executePageClasses.ExecuteWorkersPageClass"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2023-07-26T18:12:01 IST" name="chromeTest" finished-at="2023-07-26T18:16:57 IST" duration-ms="296044">
      <class name="executePageClasses.ExecuteTimeSheetPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteTimeSheetPageClass@2dca0d64]" started-at="2023-07-26T18:16:34 IST" name="beforeMethod" finished-at="2023-07-26T18:16:44 IST" duration-ms="9683" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCreateNewTimeSheet()[pri:0, instance:executePageClasses.ExecuteTimeSheetPageClass@2dca0d64]" started-at="2023-07-26T18:16:44 IST" name="verifyCreateNewTimeSheet" finished-at="2023-07-26T18:16:57 IST" duration-ms="13780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateNewTimeSheet -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteTimeSheetPageClass@2dca0d64]" started-at="2023-07-26T18:16:57 IST" name="afterMethod" finished-at="2023-07-26T18:16:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateNewTimeSheet status=SUCCESS method=ExecuteTimeSheetPageClass.verifyCreateNewTimeSheet()[pri:0, instance:executePageClasses.ExecuteTimeSheetPageClass@2dca0d64] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteTimeSheetPageClass -->
      <class name="executePageClasses.ExecuteDeductionPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDeductionPageClass@52851b44]" started-at="2023-07-26T18:13:03 IST" name="beforeMethod" finished-at="2023-07-26T18:13:09 IST" duration-ms="5672" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToAddANewDeduction()[pri:0, instance:executePageClasses.ExecuteDeductionPageClass@52851b44]" started-at="2023-07-26T18:13:09 IST" name="verifyToAddANewDeduction" finished-at="2023-07-26T18:13:16 IST" duration-ms="6427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToAddANewDeduction -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteDeductionPageClass@52851b44]" started-at="2023-07-26T18:13:16 IST" name="afterMethod" finished-at="2023-07-26T18:13:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToAddANewDeduction status=SUCCESS method=ExecuteDeductionPageClass.verifyToAddANewDeduction()[pri:0, instance:executePageClasses.ExecuteDeductionPageClass@52851b44] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteDeductionPageClass -->
      <class name="executePageClasses.ExecuteWorkersPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:01 IST" name="beforeMethod" finished-at="2023-07-26T18:12:08 IST" duration-ms="6960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToCreateANewWorker()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:08 IST" name="verifyToCreateANewWorker" finished-at="2023-07-26T18:12:18 IST" duration-ms="9509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToCreateANewWorker -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:18 IST" name="afterMethod" finished-at="2023-07-26T18:12:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToCreateANewWorker status=SUCCESS method=ExecuteWorkersPageClass.verifyToCreateANewWorker()[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:18 IST" name="beforeMethod" finished-at="2023-07-26T18:12:23 IST" duration-ms="5364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyToSearchAWorker()[pri:1, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:23 IST" name="verifyToSearchAWorker" finished-at="2023-07-26T18:12:30 IST" duration-ms="6620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyToSearchAWorker -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:30 IST" name="beforeMethod" finished-at="2023-07-26T18:12:59 IST" duration-ms="28991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:30 IST" name="afterMethod" finished-at="2023-07-26T18:12:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyToSearchAWorker status=SUCCESS method=ExecuteWorkersPageClass.verifyToSearchAWorker()[pri:1, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyDeleteAWorker()[pri:2, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:59 IST" name="verifyDeleteAWorker" finished-at="2023-07-26T18:13:03 IST" duration-ms="4610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeleteAWorker -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:13:03 IST" name="afterMethod" finished-at="2023-07-26T18:13:03 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeleteAWorker status=SUCCESS method=ExecuteWorkersPageClass.verifyDeleteAWorker()[pri:2, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteWorkersPageClass -->
      <class name="executePageClasses.ExexcuteClientPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6]" started-at="2023-07-26T18:13:16 IST" name="beforeMethod" finished-at="2023-07-26T18:13:46 IST" duration-ms="30325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyClientSearchInClientPage()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6]" started-at="2023-07-26T18:13:46 IST" name="verifyClientSearchInClientPage" finished-at="2023-07-26T18:13:52 IST" duration-ms="6065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyClientSearchInClientPage -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6]" started-at="2023-07-26T18:13:52 IST" name="beforeMethod" finished-at="2023-07-26T18:14:03 IST" duration-ms="10994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6]" started-at="2023-07-26T18:13:52 IST" name="afterMethod" finished-at="2023-07-26T18:13:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyClientSearchInClientPage status=SUCCESS method=ExexcuteClientPageClass.verifyClientSearchInClientPage()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyCreateNewClient()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6]" started-at="2023-07-26T18:14:03 IST" name="verifyCreateNewClient" finished-at="2023-07-26T18:14:12 IST" duration-ms="9116" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCreateNewClient -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6]" started-at="2023-07-26T18:14:12 IST" name="afterMethod" finished-at="2023-07-26T18:14:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateNewClient status=SUCCESS method=ExexcuteClientPageClass.verifyCreateNewClient()[pri:0, instance:executePageClasses.ExexcuteClientPageClass@584f54e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExexcuteClientPageClass -->
      <class name="executePageClasses.ExecuteLoginPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:15:48 IST" name="beforeMethod" finished-at="2023-07-26T18:15:53 IST" duration-ms="5355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:15:53 IST" name="verifySuccessfullLogin" finished-at="2023-07-26T18:15:56 IST" duration-ms="2151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:15:56 IST" name="afterMethod" finished-at="2023-07-26T18:15:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullLogin status=SUCCESS method=ExecuteLoginPageClass.verifySuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:15:56 IST" name="beforeMethod" finished-at="2023-07-26T18:16:01 IST" duration-ms="5451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCurrentPageIsOpenWhileHittingTheUrl()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:16:01 IST" name="verifyTheCurrentPageIsOpenWhileHittingTheUrl" finished-at="2023-07-26T18:16:01 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCurrentPageIsOpenWhileHittingTheUrl -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:16:01 IST" name="beforeMethod" finished-at="2023-07-26T18:16:32 IST" duration-ms="31320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:16:01 IST" name="afterMethod" finished-at="2023-07-26T18:16:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCurrentPageIsOpenWhileHittingTheUrl status=SUCCESS method=ExecuteLoginPageClass.verifyTheCurrentPageIsOpenWhileHittingTheUrl()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verifyUnSuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:16:32 IST" name="verifyUnSuccessfullLogin" finished-at="2023-07-26T18:16:34 IST" duration-ms="1538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUnSuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6]" started-at="2023-07-26T18:16:34 IST" name="afterMethod" finished-at="2023-07-26T18:16:34 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUnSuccessfullLogin status=SUCCESS method=ExecuteLoginPageClass.verifyUnSuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteLoginPageClass@576f63f6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteLoginPageClass -->
      <class name="executePageClasses.ExecuteDashBoardPageClass">
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:14:12 IST" name="beforeMethod" finished-at="2023-07-26T18:14:43 IST" duration-ms="31380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDeductionIsOpenOrNoT()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:14:43 IST" name="verifyDeductionIsOpenOrNoT" finished-at="2023-07-26T18:14:47 IST" duration-ms="3961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeductionIsOpenOrNoT -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:14:47 IST" name="afterMethod" finished-at="2023-07-26T18:14:47 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeductionIsOpenOrNoT status=SUCCESS method=ExecuteDashBoardPageClass.verifyDeductionIsOpenOrNoT()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:14:47 IST" name="beforeMethod" finished-at="2023-07-26T18:14:53 IST" duration-ms="5543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginMessageIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:14:53 IST" name="verifyLoginMessageIsDisplayedOrNot" finished-at="2023-07-26T18:14:55 IST" duration-ms="2131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginMessageIsDisplayedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:14:55 IST" name="afterMethod" finished-at="2023-07-26T18:14:55 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginMessageIsDisplayedOrNot status=SUCCESS method=ExecuteDashBoardPageClass.verifyLoginMessageIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:14:55 IST" name="beforeMethod" finished-at="2023-07-26T18:15:00 IST" duration-ms="5431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLogoInDashBoardIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:15:00 IST" name="verifyLogoInDashBoardIsDisplayedOrNot" finished-at="2023-07-26T18:15:04 IST" duration-ms="3220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoInDashBoardIsDisplayedOrNot -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:15:04 IST" name="afterMethod" finished-at="2023-07-26T18:15:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoInDashBoardIsDisplayedOrNot status=SUCCESS method=ExecuteDashBoardPageClass.verifyLogoInDashBoardIsDisplayedOrNot()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:15:04 IST" name="beforeMethod" finished-at="2023-07-26T18:15:36 IST" duration-ms="31818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:15:36 IST" name="verifySuccessfullLogin" finished-at="2023-07-26T18:15:48 IST" duration-ms="12523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfullLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9]" started-at="2023-07-26T18:15:48 IST" name="afterMethod" finished-at="2023-07-26T18:15:48 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfullLogin status=SUCCESS method=ExecuteDashBoardPageClass.verifySuccessfullLogin()[pri:0, instance:executePageClasses.ExecuteDashBoardPageClass@5d8bafa9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.ExecuteDashBoardPageClass -->
    </test> <!-- chromeTest -->
    <test started-at="2023-07-26T18:16:58 IST" name="edgeTest" finished-at="2023-07-26T18:16:58 IST" duration-ms="2">
      <class name="executePageClasses.ExecuteWorkersPageClass">
        <test-method is-config="true" signature="createReport(org.testng.ITestContext)[pri:0, instance:executePageClasses.ExecuteWorkersPageClass@5023bb8b]" started-at="2023-07-26T18:12:01 IST" name="createReport" finished-at="2023-07-26T18:12:01 IST" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5a010eec]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createReport -->
      </class> <!-- executePageClasses.ExecuteWorkersPageClass -->
    </test> <!-- edgeTest -->
  </suite> <!-- Suite -->
</testng-results>
